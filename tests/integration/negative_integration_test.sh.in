#! /bin/sh

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:@CMAKE_BINARY_DIR@/lib
export OMP_NUM_THREADS=1
export LIBSONATA_ZERO_BASED_GIDS=true

# Run the executable
#SRUN_EXTRA="--propagate=CORE"
SRUN_EXTRA=
if [ -n "$VALGRIND" -a -n "$VALGRIND_PRELOAD" ]; then
    echo "Running with valgrind"
    LD_PRELOAD=$VALGRIND_PRELOAD \
    @SRUN_PREFIX@ $SRUN_EXTRA $VALGRIND @CMAKE_BINARY_DIR@/bin/@CMAKE_SYSTEM_PROCESSOR@/special-core @TEST_ARGS@
else
    @SRUN_PREFIX@ $SRUN_EXTRA @CMAKE_BINARY_DIR@/bin/@CMAKE_SYSTEM_PROCESSOR@/special-core @TEST_ARGS@
fi
exitvalue=$?

# Check for error result
if [ $exitvalue -ne 0 ]; then
  echo "Error status value: $exitvalue"
  exit $exitvalue
fi

# diff outputed files with reference
cd @CMAKE_CURRENT_BINARY_DIR@/@SIM_NAME@

# We convert spikes to out.dat format
reports=@ENABLE_SONATA_REPORTS_TESTS@
if [ "$reports" = "ON" ]
then
  data=$(@H5DUMP_EXECUTABLE@ -d /spikes/All/timestamps -d /spikes/All/node_ids -y -O spikes | sed 's/"ms"//g;s/,/\n/g')
  echo $data | awk '{n=NF/2; for (i=1;i<=n;i++) print $i "\t" $(n+i) }' > out_SONATA.dat

  if [ ! -f out_SONATA.dat ]
  then
    echo "[ERROR] No SONATA output files. Test failed!" >&2
    exit 1
  fi
  diff -w out_SONATA.dat @CMAKE_CURRENT_SOURCE_DIR@/@SIM_NAME@/out.dat.ref > diff_SONATA.dat 2>&1
  if [ ! -s diff_SONATA.dat ]
  then
    echo "[ERROR] Results are identical for SONATA file when they should not, check the file out_SONATA.dat. Test failed!" >&2
    exit 1
  fi
fi

if [ ! -f out.dat ]
then
  echo "[ERROR] No output files. Test failed!" >&2
  exit 1
fi

sort -k 1n,1n -k 2n,2n out.dat > sort_out.dat
diff -w sort_out.dat @CMAKE_BINARY_DIR@/tests/integration/@SIM_NAME@/out.dat.ref > diff.dat 2>&1

if [ -s diff.dat ]
then
  echo "Results differs as expected, test passed"
  rm -f *.dat
  exit 0
else
  echo "[ERROR] Results are identical when they should not, check the file diff.dat. Test failed!" >&2
  exit 1
fi
