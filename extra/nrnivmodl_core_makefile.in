#
# This makefile has the rules necessary for making the custom version of coreneuron
# executable called "special-core" from various mod files.
# Mod files are looked up in the cwd, unless MODS_PATH is set

# Mechanisms version are by default 0.0, but should be overriden
MECH_NAME =
MECH_VERSION = 0.0
MODS_PATH = .
OUTPUT = @CMAKE_HOST_SYSTEM_PROCESSOR@_core

bindir = @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@
libdir = @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@
incdir = @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_INCLUDEDIR@
datadir= @CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_DATADIR@

# Additional variables set in CMAKE usable here
# - @CORENRN_COMPILE_DEFS@
# - @CORENRN_LINK_DEFS@

LDFLAGS = @CORENRN_LINK_DEFS@ $(UserLDFLAGS)
# We rebuild the include dirs since a lot of stuff changes place
INCLUDES = -I$(incdir) -I$(incdir)/coreneuron/utils/randoms $(UserINCFLAGS)
ifneq (@MPI_C_INCLUDE_PATH@,)
    INCLUDES += -I@MPI_C_INCLUDE_PATH@
endif
ifneq (@reportinglib_INCLUDE_DIR@,)
    INCLUDES += -I@reportinglib_INCLUDE_DIR@
endif

CC = @CMAKE_C_COMPILER@
CXX = @CMAKE_CXX_COMPILER@
CFLAGS = @CMAKE_C_FLAGS@ -fPIC
CXXFLAGS = @CMAKE_CXX_FLAGS@ -fPIC

COMPILE = $(CC) $(CFLAGS) @CORENRN_COMPILE_DEFS@ $(INCLUDES)
CXXCOMPILE = $(CXX) $(CXXFLAGS) @CORENRN_COMPILE_DEFS@ $(INCLUDES)
CXX_LINK = $(CXX) $(CXXFLAGS) $(LDFLAGS)
CXX_LINK_EXE = $(CXX_LINK) @CMAKE_EXE_LINKER_FLAGS@
CXX_LINK_SHARED = $(CXX_LINK) @CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS@ @CMAKE_SHARED_LINKER_FLAGS@

CORENRNLIB_FLAGS = -L$(libdir) -lcoreneuron
mod_files = $(wildcard $(MODS_PATH)/*.mod)
mod_objs = $(notdir $(mod_files:.mod=.mod.o))
special = $(OUTPUT)/special-core
ifneq ($(MECH_NAME),)
    LIB_SUFFIX = _$(MECH_NAME)
endif
coremech_libname = corenrnmech$(LIB_SUFFIX)-$(MECH_VERSION)
coremech_lib = $(OUTPUT)/lib$(coremech_libname)@CMAKE_SHARED_LIBRARY_SUFFIX@


#  ======== MAIN BUILD RULES ============

$(special): $(coremech_lib)
    # Take the main and link with nrnmech.
	# RPATH is set for ORIGIN and coreneuron lib
	$(CXX_LINK_EXE) $(libdir)/libcoreneuron_main.a -L $(OUTPUT) -l$(coremech_libname) \
	  $(CORENRNLIB_FLAGS) -Wl,-rpath,'$$ORIGIN' -Wl,-rpath,$(libdir) -o $(special)


$(coremech_lib): $(mod_objs) mod_func.o
	mkdir -p $(OUTPUT)
	@echo BUILDING lib $(coremech_lib) from Mod files $(mod_files)
	$(CXX_LINK_SHARED) mod_func.o $(mod_objs) $(CORENRNLIB_FLAGS) -o ${coremech_lib}


# Generic mod objects
%.mod.o:
	MODLUNIT=$(datadir)/nrnunits.lib \
	  $(bindir)/mod2c_core $(MODS_PATH)/$*.mod -o modc_core/
	$(CXXCOMPILE) -c modc_core/$*.cpp -o $@

# We require mod_func configured with the mods for registering them
mod_func.o: build_always
	perl $(datadir)/mod_func.c.pl $(notdir ${mod_files}) > mod_func.cpp
	$(CXXCOMPILE) -c mod_func.cpp


.PHONY: build_always
