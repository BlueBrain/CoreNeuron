pipeline {
    agent {
        label 'bb5-full'
    }
    stages {
        stage('build AoS') {
            steps {
                sh "module load boost/1.68.0/serial intel/18.0.3 hpe-mpi/2.16 cmake/3.13.0"
                sh "export CC=mpicc"
                sh "export CXX=mpicxx"
                sh "rm -rf build*"
                sh "mkdir build_aos build_intel_aos"
                sh "cd $WORKSPACE/build_aos"
                //echo 'AoS build'
                sh """
                    cmake  \
                      -G 'Unix Makefiles'  \
                      -DCMAKE_INSTALL_PREFIX=$WORKSPACE/install_aos/ \
                      -DCMAKE_BUILD_TYPE=$build_type  \
                      -DENABLE_SOA=OFF\
                      -DTEST_MPI_EXEC_BIN="mpirun" -DTEST_EXEC_PREFIX="mpirun;-n;2" -DAUTO_TEST_WITH_SLURM=OFF -DAUTO_TEST_WITH_MPIEXEC=OFF \
                      $WORKSPACE/
                    """
                sh "make VERBOSE=1 -j8"
            }
        }
        stage('build SoA') {
            steps {
                sh "mkdir build_soa build_intel_soa"
                sh "cd $WORKSPACE/build_soa"
                //echo 'SoA build'
                sh """
                    cmake  \
                      -G 'Unix Makefiles'  \
                      -DCMAKE_INSTALL_PREFIX=$WORKSPACE/install_soa/ \
                      -DCMAKE_BUILD_TYPE=$build_type  \
                      -DTEST_MPI_EXEC_BIN="mpirun" -DTEST_EXEC_PREFIX="mpirun;-n;2" -DAUTO_TEST_WITH_SLURM=OFF -DAUTO_TEST_WITH_MPIEXEC=OFF \
                      $WORKSPACE/
                    """
                sh "make VERBOSE=1 -j8"
            }
        }
        stage('test SoA'){
            steps{
                sh "module load hpe-mpi/2.16"
                sh "export MPI_UNBUFFERED_STDIO=1"

                sh "cd $WORKSPACE/build_aos"
                //echo 'Testing AoS'
                sh "ctest --output-on-failure -T test --no-compress-output -E cppcheck_test"
            }
        }
        stage('test AoS'){
            steps{
                sh "cd $WORKSPACE/build_soa"
                //echo 'Testing SoA'
                sh "ctest --output-on-failure -T test --no-compress-output -E cppcheck_test"
            }
        }
    }
}
