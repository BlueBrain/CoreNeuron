include:
  - project: hpc/gitlab-pipelines
    file:
      - spack-build-components.gitlab-ci.yml
      - github-project-pipelines.gitlab-ci.yml
  - project: hpc/gitlab-upload-logs
    file: enable-upload.yml

stages:
    - .pre
    - build_nmodl
    - build
    - test
    - build_neuron
    - test_neuron

# Set up Spack
spack_setup:
  extends: .spack_setup_ccache
  variables:
    # Enable fetching GitHub PR descriptions and parsing them to find out what
    # branches to build of other projects.
    PARSE_GITHUB_PR_DESCRIPTIONS: "true"
  script:
    - !reference [.spack_setup_ccache, script]
    # This allows us to use the CoreNEURON repository in regression tests of
    # the gitlab-pipelines repositories. The regression test pipeline triggers
    # *this* pipeline as a child, having pushed a modified branch to the GitLab
    # mirror of the CoreNEURON repository. We have to update the Spack recipe
    # to point at the GitLab mirror so the relevant commit (on the modified
    # branch) can be found.
    - if [[ "${CI_PIPELINE_SOURCE}" == "pipeline" ]]; then
    - cd $(spack location -p coreneuron)
    - sed -i -e 's#\(git\s*=\s\)"https://github.com/BlueBrain/CoreNeuron"#\1"git@bbpgitlab.epfl.ch:hpc/coreneuron.git"#' package.py
    - git diff
    - fi

.spack_nvhpc:
  variables:
    SPACK_PACKAGE_COMPILER: nvhpc
.spack_neuron:
  variables:
    SPACK_PACKAGE: neuron
    SPACK_PACKAGE_REF: ''
    SPACK_PACKAGE_SPEC: +coreneuron+debug+tests~legacy-unit
.gpu_node:
  variables:
    bb5_constraint: volta

build:nmodl:gpu:
  stage: build_nmodl
  variables:
    SPACK_PACKAGE: nmodl
    SPACK_PACKAGE_REF: ''
    SPACK_PACKAGE_SPEC: ~legacy-unit
    SPACK_PACKAGE_DEPENDENCIES: ^bison%gcc^flex%gcc^py-jinja2%gcc^py-sympy%gcc^py-pyyaml%gcc
  extends:
    - .spack_build
    - .spack_nvhpc

build:coreneuron+nmodl:gpu:
  variables:
    SPACK_PACKAGE: coreneuron
    # +report pulls in a lot of dependencies and the tests fail.
    # See https://github.com/BlueBrain/CoreNeuron/issues/518 re: build_type
    SPACK_PACKAGE_SPEC: +nmodl+gpu+tests~legacy-unit~report build_type=RelWithDebInfo
  extends:
    - .spack_build
    - .spack_nvhpc
  needs: ["build:nmodl:gpu"]

test:coreneuron+nmodl:gpu:
  extends: [.ctest, .gpu_node]
  needs: ["build:coreneuron+nmodl:gpu"]

build:neuron+nmodl:gpu:
  stage: build_neuron
  extends:
    - .spack_build
    - .spack_neuron
    - .spack_nvhpc
  before_script:
    # Build py-cython and py-numpy with GCC instead of NVHPC.
    - SPACK_PACKAGE_DEPENDENCIES="${SPACK_PACKAGE_DEPENDENCIES}^py-cython%gcc^py-numpy%gcc"
    - !reference [.spack_build, before_script]
  needs: ["build:coreneuron+nmodl:gpu"]

test:neuron+nmodl:gpu:
  stage: test_neuron
  extends: [.ctest, .gpu_node]
  needs: ["build:neuron+nmodl:gpu"]
